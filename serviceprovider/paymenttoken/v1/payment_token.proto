// Copyright (c) 2022 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

syntax = "proto3";

package serviceprovider.paymenttoken.v1;

import "common/v1/error.proto";
import "common/v1/payment_token.proto";

option go_package = "mica/proto/serviceprovider/paymenttokenv1";
option java_outer_classname = "ProvisionServiceProviderPaymentTokenProto";
option java_package = "io.mica.serviceprovider.paymenttoken.v1";
option objc_class_prefix = "MICA";

message ServiceProviderPaymentToken {
  // Mica generated key for the user that owns this token
  string service_provider_user_key = 1;

  // the primary key of this user at the Service Provider
  string service_provider_user_ref = 2;

  // Mica generated key for the instrument that this token represents
  string service_provider_instrument_key = 3;

  // the primary key of this instrument at the Service Provider
  string service_provider_instrument_ref = 4;

  common.v1.CommonPaymentToken payment_token = 5;
}

// to Mica
message ProvisionServiceProviderPaymentTokenRequest {
  oneof criteria {
    // The key representing this instrument in Mica.
    string service_provider_instrument_key = 1;

    // Primary key on the external system.
    string service_provider_instrument_ref = 2;
  }
}

message ProvisionServiceProviderPaymentTokenResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
    STATUS_INSTRUMENT_NOT_FOUND = 3;
  }
  Status status = 1;

  common.v1.Error error = 2;

  // A payment token that can be used at all partners.
  string service_provider_payment_token = 3;
}

message RemoveServiceProviderPaymentTokenRequest {
  oneof criteria {
    // The key representing this instrument in Mica.
    string service_provider_instrument_key = 1;

    // Primary key on the external system.
    string service_provider_instrument_ref = 2;

    // A payment token that can be used at all partners.
    string service_provider_payment_token = 3;
  }
}

message RemoveServiceProviderPaymentTokenResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
    STATUS_NOT_FOUND = 3;
  }
  Status status = 1;

  common.v1.Error error = 2;

  repeated string service_provider_payment_tokens = 3;
}

message SearchServiceProviderPaymentTokenRequest {
  string service_provider_user_key = 1;

  string service_provider_instrument_key = 2;
}

message SearchServiceProviderPaymentTokenResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
  }
  Status status = 1;

  common.v1.Error error = 2;

  repeated ServiceProviderPaymentToken service_provider_payment_tokens = 3;
}
