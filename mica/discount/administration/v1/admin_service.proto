// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

syntax = "proto3";

package mica.discount.administration.v1;

import "micashared/common/ping/v1/ping.proto";
import "micashared/common/v1/authentication_token.proto";
import "micashared/common/v1/external_client.proto";
import "micashared/common/v1/mtls_certificate.proto";

option go_package = "mica/discount/administrationv1";
option java_outer_classname = "AdministrationServiceProto";
option java_package = "io.mica.discount.administration.v1";
option objc_class_prefix = "MICA";

service DiscountAdministrationService {
  //  Generate a new mTLS certificate. SignToMicaClientCSR GenerateToMicaCertificate
  rpc GenerateToMicaCertificate(micashared.common.v1.GenerateToMicaCertificateRequest) returns (micashared.common.v1.GenerateToMicaCertificateResponse) {}
  // Update the certificate with a given serial number, only supports enable/disable for now
  rpc EnableToMicaCertificate(micashared.common.v1.EnableToMicaCertificateRequest) returns (micashared.common.v1.EnableToMicaCertificateResponse) {}
  // do we need a separate Disable call?
  rpc DisableToMicaCertificate(micashared.common.v1.DisableToMicaCertificateRequest) returns (micashared.common.v1.DisableToMicaCertificateResponse) {}
  //Search for certificates and return the ones that match the criteria provided
  rpc SearchToMicaCertificate(micashared.common.v1.SearchToMicaCertificateRequest) returns (micashared.common.v1.SearchToMicaCertificateResponse) {}
  // return a single certificate
  rpc GetToMicaCertificate(micashared.common.v1.GetToMicaCertificateRequest) returns (micashared.common.v1.GetToMicaCertificateResponse) {}
  // Client certificates are used when mica needs to call out to a customers environment.
  rpc GenerateFromMicaClientCertificate(micashared.common.v1.GenerateFromMicaClientCertificateRequest) returns (micashared.common.v1.GenerateFromMicaClientCertificateResponse) {}
  // After signing the CSR the member will upload the signed cert
  rpc UpdateFromMicaClientCertificate(micashared.common.v1.UpdateFromMicaClientCertificateRequest) returns (micashared.common.v1.UpdateFromMicaClientCertificateResponse) {}
  // there can only be one enable cert for each endpoint
  rpc EnableFromMicaClientCertificate(micashared.common.v1.EnableFromMicaClientCertificateRequest) returns (micashared.common.v1.EnableFromMicaClientCertificateResponse) {}
  // return all from mica certs for now
  rpc SearchFromMicaClientCertificate(micashared.common.v1.SearchFromMicaClientCertificateRequest) returns (micashared.common.v1.SearchFromMicaClientCertificateResponse) {}
  // External authentication mechanisms for Mica to call provider endpoints
  rpc GetFromMicaClientSettings(micashared.common.v1.GetFromMicaClientSettingsRequest) returns (micashared.common.v1.GetFromMicaClientSettingsResponse) {}

  rpc UpdateFromMicaClientCallbackAddress(micashared.common.v1.UpdateFromMicaClientCallBackAddressRequest) returns (micashared.common.v1.UpdateFromMicaClientCallBackAddressResponse) {}

  // creates the token configuration
  rpc CreateApiTokenConfiguration(micashared.common.v1.CreateApiTokenConfigurationRequest) returns (micashared.common.v1.CreateApiTokenConfigurationResponse) {}

  // if the authentication type is api token use these methods to properly setup the api token
  //retrieves the api token configuration including the token itself
  rpc GetApiTokenConfiguration(micashared.common.v1.GetApiTokenConfigurationRequest) returns (micashared.common.v1.GetApiTokenConfigurationResponse) {}

  // Update the configuration of the token, the set fields will be modified
  rpc UpdateAPITokenAuthenticationConfiguration(micashared.common.v1.UpdateApiTokenConfigurationRequest) returns (micashared.common.v1.UpdateApiTokenConfigurationResponse) {}

  // tests the external call to verify proper configuration and connectivity
  rpc PingExternal(micashared.common.ping.v1.PingRequest) returns (micashared.common.ping.v1.PingResponse) {}
}
