// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

syntax = "proto3";

package mica.ebt.program.v1;

import "google/protobuf/timestamp.proto";
import "micashared/common/enums/ebtregion/v1/ebt_region.proto";
import "micashared/common/enums/ebttype/v1/ebt_type.proto";
import "micashared/common/v1/error.proto";
import "validate/validate.proto";

option go_package = "mica/ebt/programv1";
option java_outer_classname = "EBTProgramProto";
option java_package = "io.mica.ebt.program.v1";
option objc_class_prefix = "MICA";

message EBTProgramRules {
  // need to add rules for what to do when an item isn't on the approve or deny lists
  bool approve_unlisted_items = 1;
}

message EBTProgram {
  string ebt_program_key = 1 [(validate.rules).string = {
    min_len: 27,
    max_len: 50
  }];

  int64 version = 2 [(validate.rules).int64.gte = 0];

  google.protobuf.Timestamp created = 3;

  google.protobuf.Timestamp updated = 4;

  micashared.common.enums.ebttype.v1.EbtType ebt_type = 5 [(validate.rules).enum.not_in = 0];

  micashared.common.enums.ebtregion.v1.EbtRegion region = 6 [(validate.rules).enum.not_in = 0];

  string issuer = 7 [(validate.rules).string = {
    min_len: 1,
    max_len: 50,
  }];

  EBTProgramRules program_rules = 8;
}

message GetEBTProgramRequest {}

message GetEBTProgramResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
    STATUS_NOT_FOUND = 3;
    STATUS_FORBIDDEN_DATA_ACCESS = 4;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;

  EBTProgram ebt_program = 3;
}

message UpdateEBTProgramRequest {
  string ebt_program_key = 1 [(validate.rules).string = {
    min_len: 27,
    max_len: 50
  }];

  int64 version = 2;

  string issuer = 3 [(validate.rules).string = {
    min_len: 1,
    max_len: 50,
  }];

  EBTProgramRules program_rules = 4 [(validate.rules).message.required = true];
}

message UpdateEBTProgramResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
    STATUS_NOT_FOUND = 3;
    STATUS_FORBIDDEN_DATA_ACCESS = 4;
    STATUS_VERSION_MISMATCH = 5;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;

  int64 version = 3;
}
