// Copyright (c) 2022 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

syntax = "proto3";

package mica.serviceprovider.serviceprovideraccount.v1;

import "google/protobuf/timestamp.proto";
import "micashared/common/enums/accounttype/v1/account_type.proto";
import "micashared/common/enums/currency/v1/currency.proto";
import "micashared/common/v1/error.proto";
import "validate/validate.proto";

option go_package = "mica/serviceprovider/serviceprovideraccountv1";
option java_outer_classname = "ServiceProviderAccountProto";
option java_package = "io.mica.serviceprovider.serviceprovideraccount.v1";
option objc_class_prefix = "MICA";

message ServiceProviderAccount {
  string service_provider_account_key = 1 [(validate.rules).string = {
    min_len: 30,
    max_len: 50
  }];

  int64 version = 2 [(validate.rules).int64.gte = 0];

  google.protobuf.Timestamp created = 3;

  google.protobuf.Timestamp updated = 4;

  string service_provider_key = 5 [(validate.rules).string = {
    min_len: 30,
    max_len: 50
  }];

  micashared.common.enums.accounttype.v1.AccountType account_type = 6;

  micashared.common.enums.currency.v1.Currency currency = 7;
}

message GetServiceProviderAccountRequest {
  string service_provider_account_key = 1 [(validate.rules).string = {
    min_len: 30,
    max_len: 50
  }];
}

message GetServiceProviderAccountResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
    STATUS_NOT_FOUND = 3;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;

  ServiceProviderAccount service_provider_account = 3;
}

message SearchServiceProviderAccountRequest {
  string service_provider_key = 1 [(validate.rules).string = {
    min_len: 30,
    max_len: 50
  }];

  micashared.common.enums.accounttype.v1.AccountType account_type = 2;

  micashared.common.enums.currency.v1.Currency currency = 3;
}

message SearchServiceProviderAccountResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;

  repeated ServiceProviderAccount service_provider_accounts = 3;
}
