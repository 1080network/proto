// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

syntax = "proto3";

package micashared.common.v1;

import "micashared/common/v1/error.proto";

option go_package = "micashared/common/v1;commonv1";
option java_outer_classname = "MTLSCertificatesProto";
option java_package = "io.micashared.common.v1";
option objc_class_prefix = "MICA";

// From Mica Client mTLS certificate operations.

message FromMicaClientCertificate {
  string certificate_id = 1; // Used for lookups NOT the actual private key.

  string display_name = 2;

  //Base64 standard encoded cert PEM string
  string base64_certificate_pem = 7;

  //Base64 standard encoded CSR PEM string
  string base64_csr_pem = 8;

  //Base64 standard encoded PEM string
  string base64_rootca_pem = 9;

  bool enabled = 6;

  bool use_host_trusted_certs = 10;
}

// We generate the db entry and return the csr to the user so they can sign it.
message GenerateFromMicaClientCertificateRequest {
  string display_name = 1;
}

message GenerateFromMicaClientCertificateResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;

  FromMicaClientCertificate certificate_to_sign = 3;
}

message UpdateFromMicaClientCertificateRequest {
  string certificate_id = 1;
  string display_name = 2;
  //Base64 standard encoded PEM string
  string base64_signed_cert_pem_from_csr = 3;
  //Base64 standard encoded PEM string
  string base64_rootca_pem = 4;

}

message UpdateFromMicaClientCertificateResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;
  FromMicaClientCertificate certificate = 3;
}

message EnableFromMicaClientCertificateRequest {
  string certificate_id = 1 ;
}

message EnableFromMicaClientCertificateResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;
  FromMicaClientCertificate certificate = 3;
}


message SearchFromMicaClientCertificateRequest {}

message SearchFromMicaClientCertificateResponse {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_ERROR = 2;
  }
  Status status = 1;

  micashared.common.v1.Error error = 2;
  repeated FromMicaClientCertificate certificates = 3;
}
